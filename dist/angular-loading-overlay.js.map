{"version":3,"sources":["webpack:///webpack/bootstrap 40b69e6d3aff804e99fa","webpack:///./source/loading-overlay.module.ts","webpack:///./source/loading-overlay.directive.ts","webpack:///./source/loading-overlay.service.ts"],"names":[],"mappings":"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","file":"./dist/angular-loading-overlay.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 40b69e6d3aff804e99fa\n **/","import {BsLoadingOverlayDirectiveFactory} from './loading-overlay.directive';\nimport BsLoadingOverlayService from './loading-overlay.service';\n\nexport default angular.module('bsLoadingOverlay', [])\n    .directive('bsLoadingOverlay', BsLoadingOverlayDirectiveFactory)\n    .factory('bsLoadingOverlayService', BsLoadingOverlayService);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/loading-overlay.module.ts\n **/","import IBsLoadingOverlayOptions from './loading-overlay.options';\nimport {BsLoadingOverlayService} from './loading-overlay.service';\n\ninterface BsLoadingOverlayDirectiveAttributes extends ng.IAttributes {\n    bsLoadingOverlayReferenceId: string;\n    bsLoadingOverlay: string;\n    bsLoadingOverlayDelay: number;\n    bsLoadingOverlayActiveClass: string;\n    bsLoadingOverlayTemplateUrl: string;\n}\n\nexport default class BsLoadingOverlayDirective implements ng.IDirective {\n    constructor(\n        private $compile: ng.ICompileService,\n        private $rootScope: ng.IRootScopeService,\n        private $templateRequest: ng.ITemplateRequestService,\n        private $q: ng.IQService,\n        private $timeout: ng.ITimeoutService,\n        private bsLoadingOverlayService: BsLoadingOverlayService\n    ) { }\n\n    restrict = 'EA';\n    link: ng.IDirectiveLinkFn = (scope: ng.IScope, $element: ng.IAugmentedJQuery, $attributes: BsLoadingOverlayDirectiveAttributes) => {\n        let overlayElement: ng.IAugmentedJQuery,\n            referenceId: string,\n            activeClass: string,\n            templatePromise: ng.IPromise<string>,\n            delay: number,\n            delayPromise: ng.IPromise<void>;\n\n        const activate = () => {\n            const globalConfig = this.bsLoadingOverlayService.getGlobalConfig();\n            referenceId = $attributes.bsLoadingOverlayReferenceId || $attributes.bsLoadingOverlay;\n            delay = +$attributes.bsLoadingOverlayDelay || globalConfig.delay;\n            activeClass = $attributes.bsLoadingOverlayActiveClass || globalConfig.activeClass;\n            const templateUrl = $attributes.bsLoadingOverlayTemplateUrl || globalConfig.templateUrl;\n\n            if (templateUrl) {\n                templatePromise = this.$templateRequest(templateUrl);\n            } else {\n                templatePromise = this.$q.reject();\n            }\n\n            templatePromise.then((loadedTemplate: string) => {\n                overlayElement = this.$compile(loadedTemplate)(scope);\n                overlayElement.data('isAttached', false);\n                updateOverlayElement(referenceId);\n            }).catch(() => {\n                updateOverlayElement(referenceId);\n            });\n\n            const unsubscribe = this.$rootScope.$on('bsLoadingOverlayUpdateEvent', (event: ng.IAngularEvent, options: IBsLoadingOverlayOptions) => {\n                if (options.referenceId === referenceId) {\n                    updateOverlayElement(referenceId);\n                }\n            });\n\n            $element.on('$destroy', unsubscribe);\n        };\n\n        const updateOverlayElement = (referenceId: string) => {\n            if (this.bsLoadingOverlayService.isActive(referenceId)) {\n                addOverlay();\n            } else {\n                removeOverlay();\n            }\n        };\n\n        const isOverlayAdded = () => !!delayPromise;\n        const addOverlay = () => {\n            if (delay) {\n                if (delayPromise) {\n                    this.$timeout.cancel(delayPromise);\n                }\n                delayPromise = this.$timeout(angular.noop, delay);\n            } else {\n                delayPromise = this.$q.when();\n            }\n\n            if (overlayElement && !overlayElement.data('isAttached')) {\n                $element.append(overlayElement);\n                overlayElement.data('isAttached', true);\n            }\n\n            $element.addClass(activeClass);\n        };\n\n        const removeOverlay = () => {\n            if (isOverlayAdded()) {\n                delayPromise.then(() => {\n                    if (overlayElement && overlayElement.data('isAttached')) {\n                        overlayElement.data('isAttached', false);\n                        overlayElement.detach();\n                    }\n\n                    $element.removeClass(activeClass);\n                    delayPromise = undefined;\n                });\n            }\n        };\n\n        activate();\n    }\n}\n\nexport const BsLoadingOverlayDirectiveFactory: ng.IDirectiveFactory = (\n    $compile: ng.ICompileService,\n    $rootScope: ng.IRootScopeService,\n    $templateRequest: ng.ITemplateRequestService,\n    $q: ng.IQService,\n    $timeout: ng.ITimeoutService,\n    bsLoadingOverlayService: BsLoadingOverlayService\n) => (\n    new BsLoadingOverlayDirective(\n        $compile,\n        $rootScope,\n        $templateRequest,\n        $q,\n        $timeout,\n        bsLoadingOverlayService\n    )\n);\n\nBsLoadingOverlayDirectiveFactory.$inject = [\n    '$compile',\n    '$rootScope',\n    '$templateRequest',\n    '$q',\n    '$timeout',\n    'bsLoadingOverlayService'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/loading-overlay.directive.ts\n **/","import IBsLoadingOverlayOptions from './loading-overlay.options';\nimport IBsLoadingOverlayHandler from './loading-overlay.handler';\n\nexport class BsLoadingOverlayService {\n    constructor(\n        private $rootScope: ng.IRootScopeService,\n        private $q: ng.IQService\n    ) { }\n\n    globalConfig: IBsLoadingOverlayOptions = {};\n    activeOverlays: { [key: string]: boolean } = {};\n\n    start(options: IBsLoadingOverlayOptions = {}) {\n        this.activeOverlays[options.referenceId] = true;\n        this.notifyOverlays(options.referenceId);\n    }\n\n    wrap(options: IBsLoadingOverlayOptions, promiseFunction: ng.IPromise<any> | (() => (ng.IPromise<any> | {}))): ng.IPromise<any> {\n        let promise: () => (ng.IPromise<any> | {});\n\n        if (typeof promiseFunction === 'function') {\n            promise = <() => ng.IPromise<any>>promiseFunction;\n        } else {\n            promise = () => promiseFunction;\n        }\n\n        return this.$q.when(this.start(options))\n            .then(promise)\n            .finally(this.stop.bind(this, options));\n    }\n\n    createHandler = (options: IBsLoadingOverlayOptions): IBsLoadingOverlayHandler => ({\n        start: this.start.bind(this, options),\n        stop: this.stop.bind(this, options),\n        wrap: this.wrap.bind(this, options)\n    })\n\n    notifyOverlays(referenceId: string) {\n        this.$rootScope.$emit('bsLoadingOverlayUpdateEvent', {\n            referenceId: referenceId\n        });\n    }\n\n    stop(options: IBsLoadingOverlayOptions = {}) {\n        delete this.activeOverlays[options.referenceId];\n        this.notifyOverlays(options.referenceId);\n    }\n\n    isActive = (referenceId: string  = undefined) => this.activeOverlays[referenceId];\n\n    setGlobalConfig(options: IBsLoadingOverlayOptions) {\n        angular.extend(this.globalConfig, options);\n    }\n\n    getGlobalConfig() {\n        return this.globalConfig;\n    }\n}\n\nconst bsLoadingOverlayServiceFactory = ($rootScope: ng.IRootScopeService, $q: ng.IQService) => new BsLoadingOverlayService($rootScope, $q);\nbsLoadingOverlayServiceFactory.$inject = ['$rootScope', '$q'];\n\nexport default bsLoadingOverlayServiceFactory;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/loading-overlay.service.ts\n **/"],"sourceRoot":""}